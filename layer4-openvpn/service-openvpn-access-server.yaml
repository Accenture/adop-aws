---

AWSTemplateFormatVersion: "2010-09-09"

Description: |
  OpenVPN Access Server 2.5.2 (Sep 05, 2018) Service Template for the DevOps Platform (ADOP).

Parameters:
  ElasticIP:
    Description: |
      The IPv4 address of the Elastic IP (EIP) to assign to the OpenVPN EC2 Instance.
      If an EIP is not provided a public IP is allocated. Note: restarting the instance will
      result in this public IP updating.
    Type: String
    Default: ""
  OpenVpnServerFQDN:
    Description: |
      The fully-qualified domain name (FQDN) for the OpenVPN to use (e.g. vpn.example.com).
      Use the ElasticIP IPv4 address if you do not have a domain name.
      Leave this parameter blank if you have opted for an auto-assigned IPv4 address.
    Type: String
    Default: ""
  InstanceType:
    Description: |
      The OpenVPN EC2 instance type.
      It is recommend an instance type with support for enhanced networking is selected given the advantage of high throughput and low network latency.
      See https://aws.amazon.com/ec2/instance-types/ for more information.
    Type: String
    Default: "m4.large"
  OpenVPNKeyPair:
    Description: |
      The OpenVPN Key pair name.
    Type: AWS::EC2::KeyPair::KeyName
  VpcId:
    Description: |
      The VPC IP with ADOP/C provisioned.
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Description: |
      The subnet id of the ADOP/C public subnet.
    Type: AWS::EC2::Subnet::Id
  OpenVPNSecurityGroup:
    Description: |
      Security group for OpenVPN Access Server
      Created in previous template service-openvpn-access-server-security-group.yaml
    Type: AWS::EC2::SecurityGroup::Id
  OpenVpnAdminUserUsername:
      Description: |
       Initial OpenVPN service admin user username.
      Type: String
      NoEcho: true
  OpenVpnAdminUserPassword:
    Description: |
       Initial OpenVPN service admin user password. Please choose a strong password.
    Type: String
    NoEcho: true
  OpenVpnLicenseType:
      Description: |
        The OpenVPN License type. See OpenVPN Access Server AMI in the market place for AWS charges/OpenVPN license costs.
        Options: Bring your own license (BYOL), 5/10/25/50/100/250/500 connected devices respectively.
      Type: String
      Default: "BYOL"
      AllowedValues:
        -
          BYOL
        -
          5
        -
          10
        -
          25
        -
          50
        -
          100
        -
          250
        -
          500
  OpenVpnSplitTunnel:
    Description: |
      True if the OpenVPN is a split tunnel, else false. A VPN is considered to be a split tunnel if it only routes private traffic over the tunnel and not the traffic destined for the default gateway.
    Default: false
    Type: String
    AllowedValues:
      -
        true
      -
        false
  LdapServerURL:
    Description: |
      LDAP server or proxy endpoint e.g. <host>:389
    Type: String
  LdapSSLEnabled:
      Description: |
        Connect to LDAP via SSL. Select 'never' if SSL is not enabled else 'always'.
      Type: String
      Default: "never"
      AllowedValues:
        -
          never
        -
          always
  LdapBindDn:
    Description: |
      LDAP server BindDn (by default for ADOP/C, this is cn=admin,dc=ldap,dc=example,dc=com)
    Default: "cn=admin,dc=ldap,dc=example,dc=com"
    Type: String
  LdapBindDnPassword:
    Description: |
      LDAP server Admin bind DN password (The value of LDAP_PWD in your platform.secrets.sh file)
    Type: String
    NoEcho: true
  LdapUsersBaseDn:
      Description: |
        Users base distinguished name.
      Type: String
      Default: "ou=people,dc=ldap,dc=example,dc=com"
  LdapLoginAttribute:
    Description: |
      User login attribute from the LDAP directory schema.
    Type: String
    Default: "uid"
  LdapVpnGroupMembership:
    Description: |
      LDAP VPN group membership query (e.g. memberOf=cn=vpn,ou=groups,dc=ldap,dc=example,dc=com)
      Leave this parameter empty if you do not want to restrict access to the Open VPN from a particular group.
    Type: String
    Default: ""

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "OpenVPN Light-weight directory access protocol (LDAP) Configuration"
        Parameters:
          - LdapServerURL
          - LdapSSLEnabled
          - LdapBindDn
          - LdapBindDnPassword
          - LdapUsersBaseDn
          - LdapLoginAttribute
          - LdapVpnGroupMembership
      -
        Label:
          default: "OpenVPN VPN EC2 Configuration"
        Parameters:
          - ElasticIP
          - InstanceType
          - OpenVpnLicenseType
          - OpenVpnServerFQDN
          - OpenVPNKeyPair
          - OpenVpnAdminUserUsername
          - OpenVpnAdminUserPassword
          - OpenVpnSplitTunnel
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - SubnetId
          - OpenVPNSecurityGroup
    ParameterLabels:
      LdapBindDn:
        default: "Bind DN"
      LdapServerURL:
        default: "Server URL"
      LdapSSLEnabled:
        default: "SSL enabled"
      LdapUsersBaseDn:
        default: "Users base DN"
      LdapBindDnPassword:
        default: "Bind DN password"
      LdapLoginAttribute:
        default: "Login attribute"
      LdapVpnGroupMembership:
        default: "VPN Group"
      ElasticIP:
        default: "Elastic IP"
      InstanceType:
        default: "Instance type"
      OpenVpnServerFQDN:
        default: "Open VPN Server fully-qualified domain name."
      OpenVPNKeyPair:
        default: "Open VPN Key pair name"
      OpenVpnLicenseType:
        default: "Open VPN license type"
      VpcId:
        default: "VPC ID"
      SubnetId:
        default: "Public Subnet ID"
      OpenVPNSecurityGroup:
        default: "OpenVPN Access Server Security Group"
      OpenVpnAdminUserUsername:
        default: "OpenVpn admin user username"
      OpenVpnAdminUserPassword:
        default: "OpenVpn admin user password"
      OpenVpnSplitTunnel:
        default: "OpenVPN Split tunnel"

Mappings:
  LicenseMap:
    ap-northeast-1:
      BYOL: "ami-098d0f4c5bf6227a0"
      '5': "ami-0d6ce1930de48f235"
      '10': "ami-0015f2df754a86c2e"
      '25': "ami-0fbd63d3ecc2f262f"
      '50': "ami-0b67e06351b0dc15c"
      '100': "ami-0c2d8eb5005dec783"
      '250': "ami-0981364ecb18f3890"
      '500': "ami-0ae19da9fe3f525df"
    ap-northeast-2:
      BYOL: "ami-02b5dc052b564fec0"
      '5': "ami-07f266eb911aa0d88"
      '10': "ami-071111130507ac291"
      '25': "ami-094a5177fcccff46c"
      '50': "ami-096b7bd3f3b7035b2"
      '100': "ami-08bd63441c4e50757"
      '250': "ami-0c03fa58c101eb48b"
      '500': "ami-07cb5eeb6c448592b"
    ap-south-1:
      BYOL: "ami-034cb846d1e8a7167"
      '5': "ami-0f335dc0fef7f1f36"
      '10': "ami-038ad4c902038bdd0"
      '25': "ami-06d45b319a2bff536"
      '50': "ami-01100962d5503df7d"
      '100': "ami-0ed1e3b37b4897dd5"
      '250': "ami-089d0ae67758e5b83"
      '500': "ami-05c0aba80ac6af73b"
    ap-southeast-1:
      BYOL: "ami-035ef08dc36f180aa"
      '5': "ami-0dca7dcd09f701a3f"
      '10': "ami-08c84d5878d1bdd2a"
      '25': "ami-0fe56d8a2bc116ff5"
      '50': "ami-01e4b45f98d5fb7f5"
      '100': "ami-0ba594df5acd53c25"
      '250': "ami-059d722420c64f2f3"
      '500': "ami-0751c9b96123a2aa9"
    ap-southeast-2:
      BYOL: "ami-04451eb68bab5007c"
      '5': "ami-044dd543b41af2ef5"
      '10': "ami-008dcc797450628e6"
      '25': "ami-051c2e76039a29949"
      '50': "ami-05f8058f72bb8112f"
      '100': "ami-09e176fd09c2dbb3c"
      '250': "ami-0831c2ca743a90d46"
      '500': "ami-0759b7e939252f469"
    ca-central-1:
      BYOL: "ami-0a5b5afba01085537"
      '5': "ami-041d7fde0bf781b18"
      '10': "ami-0d8713019ee3eec8c"
      '25': "ami-0b79b723130090628"
      '50': "ami-0f1edce4ee6ce3c07"
      '100': "ami-0ed85ec2433dc6850"
      '250': "ami-0d8ab8fe67517cd08"
      '500': "ami-00c206594ccc5baab"
    eu-central-1:
      BYOL: "ami-0bd86b32999b56457"
      '5': "ami-0f98d9555ba24d875"
      '10': "ami-08f1a0bfe38eb4b88"
      '25': "ami-06d75bf4d53a4d87e"
      '50': "ami-0f2a01f64a53f9a43"
      '100': "ami-0ef4220396352bf9c"
      '250': "ami-08a29505acbb3e417"
      '500': "ami-01efd78e202cb301b"
    eu-west-1:
      BYOL: "ami-03e932fa49855fcd3"
      '5': "ami-0b6b2b40aa1d839b0"
      '10': "ami-045946737f6836efe"
      '25': "ami-01a191cc4def950c4"
      '50': "ami-059b769e452752e0d"
      '100': "ami-04d585dcac04c6f4b"
      '250': "ami-052bdd9e54ae5e590"
      '500': "ami-0ba6ab5b57124a46a"
    eu-west-2:
      BYOL: "ami-04c453c26f35557e4"
      '5': "ami-05a04a63d3199d1b4"
      '10': "ami-0e88702af58376dee"
      '25': "ami-0e80176a2a2727adc"
      '50': "ami-045e33d6c91cdc602"
      '100': "ami-099bcac0cf32e6ae4"
      '250': "ami-008a86e3fa3ce3143"
      '500': "ami-0b1515fdf928688f7"
    eu-west-3:
      BYOL: "ami-0a5c6377a290549ed"
      '5': "ami-04f9499f156229881"
      '10': "ami-0278858d95633b8f5"
      '25': "ami-05a247f3d7e5b9b18"
      '50': "ami-049897e023125dc5c"
      '100': "ami-0a626348066dd21af"
      '250': "ami-0800725c5bbb3edd1"
      '500': "ami-0b3228054e1d117fa"
    sa-east-1:
      BYOL: "ami-087afa4f729503b7b"
      '5': "ami-0cd6c107da8dc7f2d"
      '10': "ami-01e2b40cc995582f1"
      '25': "ami-07174020b4ee29e11"
      '50': "ami-03da61f57c0011e79"
      '100': "ami-06848f85c0e8847f1"
      '250': "ami-085b7cb78f960d53b"
      '500': "ami-0e375cc8e87647c22"
    us-east-1:
      BYOL: "ami-030add67c93791800"
      '5': "ami-06934425f62d05cba"
      '10': "ami-056007246a75b0b21"
      '25': "ami-0c3bc8f8e56fcca31"
      '50': "ami-018419b0ffbfabf18"
      '100': "ami-0737f060c4f30af20"
      '250': "ami-09723812bac7a7a8c"
      '500': "ami-07ac8c411a57d7ca0"
    us-east-2:
      BYOL: "ami-0e3ec88a0f21120e6"
      '5': "ami-0c804f5dfb53f5c90"
      '10': "ami-08e35b64808dd6917"
      '25': "ami-0e17fb34419de10dc"
      '50': "ami-0fb536e79d8d24c4f"
      '100': "ami-0790cb30b171098fa"
      '250': "ami-061846026272a2316"
      '500': "ami-0d3b95e376cc1e77d"
    us-west-1:
      BYOL: "ami-08046fc352de22257"
      '5': "ami-0d22d3bffaf3f9773"
      '10': "ami-0ac2ee6638cb8ecdc"
      '25': "ami-05b4a6799a09c4bf6"
      '50': "ami-0efb04cd174328cfb"
      '100': "ami-0efbf0645a65bc9a9"
      '250': "ami-0761adff4e28e01c2"
      '500': "ami-02451e0892b471918"
    us-west-2:
      BYOL: "ami-0f18500e6e4ebf9af"
      '5': "ami-013009bc6147d1e48"
      '10': "ami-06fdec2373b5a2e15"
      '25': "ami-0c13dcce770317a83"
      '50': "ami-0a49e1b1559a7e05b"
      '100': "ami-0791290d120cce600"
      '250': "ami-02fbd0f1efb3f59b3"
      '500': "ami-088fe594f4c9724f8"

Resources:

  OpenVpnEc2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName:
        Ref: "OpenVPNKeyPair"
      BlockDeviceMappings:
        -
          DeviceName: "/dev/sda1"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 8
      InstanceType:
        Ref: InstanceType
      ImageId: !FindInMap [LicenseMap, !Ref "AWS::Region", !Ref OpenVpnLicenseType]
      NetworkInterfaces:
        -
          DeleteOnTermination: true
          Description: "Primary Network Interface"
          DeviceIndex: 0
          AssociatePublicIpAddress: true
          SubnetId:
            Ref: SubnetId
          GroupSet:
            -
              Ref: OpenVPNSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -x

          admin_user=${OpenVpnAdminUserUsername}
          admin_pw="${OpenVpnAdminUserPassword}"

          # Route user DNS queries through the VPN
          reroute_dns=1

          systemctl enable openvpnas
          systemctl start openvpnas

          # Wait for OpenVPN to initialise
          sleep 30

          echo "##################### Generating Initial self-signed SSL Certificates #####################"

          /usr/local/openvpn_as/scripts/certool -d /usr/local/openvpn_as/etc/web-ssl --type ca --unique --cn "ADOP OpenVPN Web CA"

          OPENVPN_FQDN=${OpenVpnServerFQDN}

          if [ "$OPENVPN_FQDN" == "" ]; then
            OPENVPN_FQDN=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
          fi

          echo "[INFO] - OpenVPN FQDN: $OPENVPN_FQDN"

          /usr/local/openvpn_as/scripts/certool -d /usr/local/openvpn_as/etc/web-ssl --type server --remove_csr --sn_off --serial 1 --name server --cn $OPENVPN_FQDN

          openssl dhparam -dsaparam -out /home/openvpnas/dh.pem 4096
          /usr/local/openvpn_as/scripts/confdba -mk external_pki.dh_pem --value_file /home/openvpnas/dh.pem

          echo "##################### Configuring OpenVPN #####################"

          if [ "${OpenVpnSplitTunnel}" == "true" ]; then
            # Split tunnel
            /usr/local/openvpn_as/scripts/sacli --key vpn.client.routing.reroute_gw --value false ConfigPut
          else
            # Route Internet traffic through the VPN
            /usr/local/openvpn_as/scripts/sacli --key vpn.client.routing.reroute_gw --value true ConfigPut
          fi

          /usr/local/openvpn_as/scripts/sacli --key vpn.client.tls_version_min --value 1.2 ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key vpn.server.tls_version_min --value 1.2 ConfigPut

          /usr/local/openvpn_as/scripts/sacli --key auth.module.type --value ldap ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key auth.ldap.0.server.0.host --value ${LdapServerURL} ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key auth.ldap.0.bind_dn --value ${LdapBindDn} ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key auth.ldap.0.bind_pw --value ${LdapBindDnPassword} ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key auth.ldap.0.name --value ADOP-C-LDAP ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key auth.ldap.0.users_base_dn --value ${LdapUsersBaseDn} ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key auth.ldap.0.uname_attr --value ${LdapLoginAttribute} ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key auth.ldap.0.use_ssl --value ${LdapSSLEnabled} ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key vpn.server.google_auth.enable --value true ConfigPut

          # Ensure admin console is not exposed over the Internet.
          /usr/local/openvpn_as/scripts/sacli --key vpn.server.port_share.service  --value "client" ConfigPut

          LDAP_GROUP_MEMBERSHIP=${LdapVpnGroupMembership}

          if [ "$LDAP_GROUP_MEMBERSHIP" != "" ]; then
            /usr/local/openvpn_as/scripts/sacli --key auth.ldap.0.add_req --value $LDAP_GROUP_MEMBERSHIP ConfigPut
          fi

          # Setting WebServer SSL/TLS Options to TLSv1.2 to disable SSV3. This will avoid SOC Vulnerability related to OpenVPN
          /usr/local/openvpn_as/scripts/sacli --key cs.tls_version_min --value 1.2 ConfigPut

          /usr/local/openvpn_as/scripts/sacli --key vpn.server.session_ip_lock --value true ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key vpn.server.lockout_policy.n_fails --value 3 ConfigPut
          /usr/local/openvpn_as/scripts/sacli --key vpn.server.lockout_policy.reset_time --value 900 ConfigPut

          echo "##################### Restart OpenVPN #####################"

          /usr/local/openvpn_as/scripts/sacli start

          echo "##################### Sanitizing OpenVPN Cloud-Init logs #####################"

          sed -i s/${LdapBindDnPassword}/LDAP_BIND_DN_PASSWORD/g /var/lib/cloud/instance/scripts/part-001
          sed -i s/admin_user=${OpenVpnAdminUserUsername}/OPENVPN_ADMIN_USER_USERNAME/g /var/lib/cloud/instance/scripts/part-001
          sed -i s/admin_pw=${OpenVpnAdminUserPassword}/OPENVPN_ADMIN_USER_USERNAME/g /var/lib/cloud/instance/scripts/part-001

          sed -i s/${LdapBindDn}/LDAP_ADMIN_BIND_DN/g /var/log/cloud-init.log
          sed -i s/admin_user=${OpenVpnAdminUserUsername}/OPENVPN_ADMIN_USER_USERNAME/g /var/log/cloud-init.log
          sed -i s/admin_pw=${OpenVpnAdminUserPassword}/OPENVPN_ADMIN_USER_USERNAME/g /var/log/cloud-init.log

          echo "##################### OpenVPN setup complete #####################"

          curl -X PUT -H 'Content-Type:' --data-binary '{"Status": "SUCCESS","Reason": "OpenVPN Access Service is ready","UniqueId": "OpenVpnEc2Instance","Data": "Done"}' "${OpenVpnWaitHandle}"

      Tags:
        -
          Key: "Name"
          Value: !Join [ "-", [ !Ref "AWS::StackName", "OpenVPN" ] ]
        -
          Key: "Service"
          Value: "openVPN"
        -
          Key: "ServiceComponent"
          Value: "applicationServer"
        -
          Key: "NetworkTier"
          Value: "public"

  OpenVPNEipAssociation:
    Type: "AWS::EC2::EIPAssociation"
    Condition: AssignOpenVPNEip
    Properties:
      EIP:
        Ref: ElasticIP
      InstanceId:
        Ref: OpenVpnEc2Instance

  OpenVpnWaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  OpenVpnWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    DependsOn:
       -
         OpenVpnEc2Instance
    Properties:
      Handle:
        Ref: OpenVpnWaitHandle
      Timeout: 1800

Conditions:
  AssignOpenVPNEip: !Not [ !Equals [ !Ref ElasticIP, "" ] ]

Outputs:
  OpenVpnManagementConsole:
    Description: OpenVpn Management Console Access URL
    Value: !Join ["", [ "https://", !GetAtt OpenVpnEc2Instance.PrivateIp, ":943/admin" ]]
  OpenVpnLoginUrl:
      Description: OpenVpn Management User Login URL
      Value: !Join ["", [ "https://", !GetAtt OpenVpnEc2Instance.PublicIp, ":443/" ]]
...
